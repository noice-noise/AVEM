@startuml

title __BASIC's Class Diagram__\n

  namespace avem.basic {
    class avem.basic.AVEMInfo {
        {static} + ANNOUNCEMENT : String
        {static} + CURRENT_ACCOUNT : AVAccount
        {static} + CURRENT_ACCOUNT_ACCESS : Integer
        {static} + FREQUENTLY_ASKED_QUESTIONS : String
        {static} + RECENT_ACTIVITY : String
        {static} + avAccountEntries : HashMap<String, AVAccount>
        {static} + isFirstAccess : boolean
        {static} - accountFile : File
        {static} - activityFile : File
        {static} - announcementFile : File
        {static} - dateFormatter : DateTimeFormatter
        {static} - infoDIR : File
        {static} - timeFormatter : DateTimeFormatter
        + AVEMInfo()
        {static} + addAccount()
        {static} + displayAnnouncement()
        {static} + displayFAQs()
        {static} + displayRecentActivity()
        {static} + editAccount()
        + getAccount()
        {static} + getAccountFileContents()
        {static} + getAccountInfo()
        {static} + getActivityFileContents()
        {static} + getAllAccounts()
        {static} + getAnnouncement()
        {static} + getAnnouncementFileContents()
        {static} + getFormattedEquipment()
        + getHashMap()
        {static} + getRecentActivity()
        {static} + initialize()
        {static} + isValidAccount()
        {static} + removeAccount()
        {static} + resetAccounts()
        {static} + resetBulletin()
        {static} + setFirstAccessAsFalse()
        {static} + setFirstAccessAsTrue()
        {static} + updateAccountInfo()
        {static} + updateAccountsFile()
        {static} + updateAnnouncement()
        {static} + updateRecentActivity()
        {static} - appendSignInInfo()
        {static} - createAccountFile()
        {static} - createActivityFile()
        {static} - createAll()
        {static} - createAnnouncementFile()
        {static} - createDirectory()
        {static} - deleteBulletinFiles()
        {static} - directoryExists()
        {static} - initAccountEntries()
        {static} - initDirectoryWithPath()
        {static} - parseAccountFrom()
        {static} - parseAccountsFromFile()
        {static} - parseAllFileContents()
        {static} - updateActivityFile()
        {static} - updateAnnouncementFile()
    }
  }
  

  namespace avem.basic {
    class avem.basic.AVEMTheme {
        {static} + CURRENT_COLOR : int
        {static} + CURRENT_MODE : int
        {static} + DARK_MODE_VALUE : int
        {static} + FLAME : int
        {static} + FONT_ALERT_HEADERS : Font
        {static} + ICE : int
        {static} + LIGHT_MODE_VALUE : int
        {static} + LIME : int
        {static} + MAROON_GOLD : int
        {static} + MIDNIGHT : int
        {static} + VERSION : String
        {static} - BASE : String
        {static} - COLOR : String
        {static} - DARK_GRAY : Color
        {static} - DARK_MODE : String
        {static} - FLAME_THEME : String
        {static} - ICE_THEME : String
        {static} - LIGHT_MODE : String
        {static} - LIME_THEME : String
        {static} - MAROON_GOLD_THEME : String
        {static} - MIDNIGHT_THEME : String
        {static} - MODE : String
        {static} - THEME_IMAGE_ACCENT_COLOR : Color
        {static} - mode : List
        {static} - modeLabels : List
        {static} - themeLabels : List
        {static} - themes : List
        {static} + adjustImgThemeColor()
        {static} + getCurrentThemeColor()
        {static} + getCurrentThemeMode()
        {static} + getModeLabels()
        {static} + getModes()
        {static} + getStyleSheets()
        {static} + getThemeLabels()
        {static} + getThemes()
        {static} + setTheme()
        - AVEMTheme()
        {static} - adjustImageColors()
    }
  }
  

  namespace avem.basic {
    class avem.basic.AVEMWindows {
        {static} - xOffset : double
        {static} - yOffset : double
        + change()
        {static} + maintainPosition()
        {static} + makeMovable()
        {static} + makeMovableScene()
    }
  }
  



right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
